# ~/rustdesk-server-backend/docker-compose.yml
version: '3.8'

services:
  hbbs:
    container_name: hbbs
    image: rustdesk/rustdesk-server:latest
    command: hbbs -r desk.captainkirk.dev:21117 -k _ # Use your domain for relay, -k _ for empty key
    volumes:
      - rustdesk_data:/root # Mounts the persistent disk to /root inside container for DB
    # REMOVED: network_mode: host
    # Ports are exposed internally to the Docker network, Caddy will proxy them
    ports:
      - "21115:21115/tcp" # HBBS Signaling
      - "21118:21118/udp" # HBBS UDP (for hole-punching)
    restart: always
    depends_on:
      - hbbr # hbbs needs hbbr to be running for its relay part

  hbbr:
    container_name: hbbr
    image: rustdesk/rustdesk-server:latest
    command: hbbr # Relay server command
    volumes:
      - rustdesk_data:/root # Mounts the persistent disk to /root inside container for DB
    # REMOVED: network_mode: host
    # Ports are exposed internally to the Docker network, Caddy will proxy them
    ports:
      - "21116:21116/tcp" # HBBR Relay
      - "21117:21117/tcp" # If clients connect directly to 21117 for relay (as specified by hbbs command)
      - "21119:21119/udp" # HBBR UDP
    restart: always

  caddy:
    container_name: caddy
    image: caddy:latest # Use the standard Caddy image
    restart: unless-stopped
    # Caddy will listen on 80 and 443 for external traffic
    # Render's Web Service will target one of these ports (e.g., 443)
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile # Mount your Caddyfile from the repo
      # REMOVED: - /opt/rustdesk-server/data/srv:/srv (website is on Vercel now)
      - caddy_data:/data # Persistent storage for Caddy's certificates
      - caddy_config:/config # Persistent storage for Caddy's configuration
    depends_on:
      - hbbs # Caddy needs hbbs and hbbr to be up to proxy to them
      - hbbr

volumes:
  rustdesk_data: {} # Docker named volume for RustDesk data persistence
  caddy_data: {}    # Docker named volume for Caddy data
  caddy_config: {}  # Docker named volume for Caddy config
